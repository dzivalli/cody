name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: "12"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install NPM packages
        run: |
          yarn install
      - name: Run ESLint
        run: |
          yarn lint
  test:
    name: RSpec
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/cody_test
      CODY_GITHUB_ACCESS_TOKEN: abc123
      CODY_JWT_SECRET_KEY: fake
      CODY_HOST: cody.example
      CODY_ATTR_ENCRYPTED_KEY: "eTJIFMy/H5/FL2HXllaCyZ5XcY6FsC0itYVN7ZbNxv0="
      RAILS_ENV: test
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@master
        with:
          bundler-cache: true
      - name: Install gems
        run: |
          gem install bundler:1.17.3
          bundle install --jobs 4 --retry 3
      - name: Run RSpec
        run: |
          bundle exec rake db:create db:test:prepare
          bundle exec rspec
  jest:
    name: Jest
    runs-on: ubuntu-latest
    needs: ["eslint"]
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@master
        with:
          bundler-cache: true
      - uses: actions/setup-node@v2-beta
        with:
          node-version: "12"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install gems
        run: |
          gem install bundler:1.17.3
          bundle install --jobs 4 --retry 3
      - name: Install NPM packages
        run: |
          yarn install
      - name: Run Jest
        run: |
          bin/webpack
          yarn test
      - uses: codecov/codecov-action@v1
  browser:
    name: System Test
    runs-on: ubuntu-latest
    needs: ["test", "jest", "eslint"]
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/cody_test
      CODY_GITHUB_ACCESS_TOKEN: abc123
      CODY_JWT_SECRET_KEY: fake
      CODY_HOST: cody.example
      CODY_ATTR_ENCRYPTED_KEY: "eTJIFMy/H5/FL2HXllaCyZ5XcY6FsC0itYVN7ZbNxv0="
      RAILS_ENV: test
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@master
        with:
          bundler-cache: true
      - uses: actions/setup-node@v2-beta
        with:
          node-version: "12"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install gems
        run: |
          gem install bundler:1.17.3
          bundle install --jobs 4 --retry 3
      - name: Install NPM packages
        run: |
          yarn install
      - name: Compile Assets
        run: |
          bundle exec rake assets:precompile
      - name: Run System Tests
        run: |
          bundle exec rake db:create db:test:prepare
          bundle exec rspec -t browser
